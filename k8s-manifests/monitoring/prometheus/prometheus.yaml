apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: prometheus
  name: prometheus
  namespace: monitoring
spec:
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9090
              name: http-prometheus
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/prometheus
              name: prometheus-pv
      volumes:
        - name: prometheus-pv
          persistentVolumeClaim:
            claimName: prometheus-pvc
          configMap:
            name: prometheus-config

---

apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: monitoring
spec:
  ports:
    - port: 9090
      protocol: TCP
      targetPort: http-prometheus
  selector:
    app: prometheus
  sessionAffinity: None
  type: LoadBalancer

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  prometheus.yml: |-
    global:
      scrape_interval: 15s
      scrape_timeout: 10s
      evaluation_interval: 60s
      external_labels:
        cluster: ${CLUSTER_NAME}
    scrape_configs:
      - job_name: "Kubernetes-APIserver"
        kubernetes_sd_configs:
          - role: endpoints
          scheme: http
          tls_config:
            insecure_skip_verify: true
      - job_name: "grafana"
        static_configs:
          - target: ['grafana.monitoring.svc.cluster.local:3000']
      - job_name: "prometheus"
        static_configs:
          - target: ['prometheus.monitoring.svc.cluster.local:9090']


